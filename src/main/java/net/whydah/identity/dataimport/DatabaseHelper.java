package net.whydah.identity.dataimport;

import com.google.inject.Inject;
import org.apache.commons.dbutils.QueryRunner;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.sql.SQLException;

/**
 * @author <a href="mailto:erik.drolshammer@altran.com">Erik Drolshammer</a>
 * @since 10/19/12
 */
public class DatabaseHelper {

    private static final Logger logger = LoggerFactory.getLogger(DatabaseHelper.class);
    private final QueryRunner queryRunner;

    public enum DB_DIALECT {HSSQL, MYSQL,MSSQL}

    @Inject
    public DatabaseHelper(QueryRunner queryRunner) {
        this.queryRunner = queryRunner;
    }

    public void initDB(DB_DIALECT dialect) {
        switch (dialect) {
            case HSSQL:
                createDatabaseTables(dialect);
                break;
            case MYSQL:
                createDatabaseTables(dialect);
                break;
            case MSSQL:
                logger.info("Expecting the MSSql database to be pre-initialized with the latest schema. Automatic database creation is not supported.");
                break;
            default:
                logger.warn("Trying to init database with unknown database dialect {}", dialect.name());
        }
    }


    private void createDatabaseTables(DB_DIALECT dialect) {
        logger.info("Creating UserPropertyAndRole tables for DB_DIALECT={}.", dialect.name());
        try {
            if(dialect == DB_DIALECT.HSSQL) {
                queryRunner.update("CREATE TABLE UserRoles (" +
                        "  RoleID char(255)," +
                        "  UserID char(255) NOT NULL," +
                        "  AppID varchar(255)," +
                        "  OrganizationName varchar(255)," +
                        "  RoleName varchar(255)," +
                        "  RoleValues varchar(256)" +
                        ")");

                queryRunner.update("CREATE TABLE Applications (" +
                        "  ID varchar(32) PRIMARY KEY," +
                        "  Name varchar(255)," +
                        "  DefaultRoleName varchar(256) default null," +
                        "  DefaultOrgName varchar(256) default null," +
                        "  ApplicationSecret varchar(256) default null" +
                        ")\n");
            }else if(dialect == DB_DIALECT.MYSQL) {
                queryRunner.update("CREATE TABLE UserRoles (\n" +
                        " RoleID char(255),\n" +
                        "   UserID char(255) NOT NULL,\n" +
                        "   AppID varchar(255),\n" +
                        "   OrganizationName varchar(255),\n" +
                        "   RoleName varchar(255),\n" +
                        "   RoleValues varchar(256),\n" +
                        "    PRIMARY KEY (RoleID)\n" +
                        " )\n");
                queryRunner.update("CREATE TABLE Applications (" +
                        "  ID varchar(32)," +
                        "  Name varchar(255)," +
                        "  DefaultRoleName varchar(256) default null," +
                        "  DefaultOrgName varchar(256) default null," +
                        "  ApplicationSecret varchar(256) default null," +
                        "   PRIMARY KEY(ID)\n" +
                        ")\n");
            }


            queryRunner.update("CREATE TABLE Organization (" +
                    "  ID varchar(32)," +
                    "  Name varchar(255)" +
                    ")");
            queryRunner.update("CREATE TABLE Roles (" +
                    "  ID char(32)," +
                    "  Name varchar(255)" +
                    ")");
            if(dialect == DB_DIALECT.HSSQL) {
                queryRunner.update("CREATE TABLE AUDITLOG (" +
                        "  ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY," +
                        "  userid varchar(255)," +
                        "  timestamp varchar(20)," +
                        "  action varchar(255)," +
                        "  field varchar(255)," +
                        "  value varchar(4096)" +
                        ")");
            }
            else if(dialect == DB_DIALECT.MYSQL) {
                queryRunner.update("CREATE TABLE AUDITLOG (\n" +
                        " ID MEDIUMINT NOT NULL AUTO_INCREMENT,\n" +
                        " userid varchar(255),\n" +
                        " timestamp varchar(20),\n" +
                        " action varchar(255),\n" +
                        " field varchar(255),\n" +
                        " value varchar(4096),\n" +
                        " PRIMARY KEY(ID)\n" +
                        ")");
            }
        } catch (SQLException e) {
            logger.info("Error creating tables", e);
        }
    }
}